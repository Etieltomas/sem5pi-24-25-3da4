{
	"info": {
		"_postman_id": "469d4231-bac7-43d6-8d8e-1dcbb4148b0f",
		"name": "Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Register Patient",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7f5777e9-d388-4877-a034-167487ebba8f",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.expect(pm.response.code).to.equal(201);",
							"});",
							"",
							"pm.test(\"Response time is less than 2 seconds\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							"",
							"pm.test(\"All values in the response match the expected values\", function () {",
							"    const jsonData = pm.response.json();",
							"    ",
							"    pm.expect(jsonData.dateOfBirth).to.equal(\"01-01-2000\");",
							"    pm.expect(jsonData.gender).to.equal(\"Male\");",
							"    pm.expect(jsonData.name).to.equal(\"Tomás Leite\");",
							"    pm.expect(jsonData.email).to.equal(\"left4deadgame2@gmail.com\");",
							"    pm.expect(jsonData.phone).to.equal(\"123-456-7891\");",
							"    pm.expect(jsonData.address).to.equal(\"123 Main St, Anytown, USA\");",
							"    ",
							"    // Stringify arrays for accurate comparison of Conditions",
							"    const expectedConditions = [\"Diabetes\", \"Hypertension\"];",
							"    pm.expect(JSON.stringify(jsonData.conditions)).to.equal(JSON.stringify(expectedConditions));",
							"    ",
							"    pm.expect(jsonData.emergencyContact).to.equal(\"Jane Doe: 098-765-4321\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "91a3802d-8f64-4b72-8e1b-3f6639c54670",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": ".AspNetCore.Cookies=CfDJ8NqQwVH9wspFt2nkQ4EBMjMbSsR7Wi4LujLDEGWzDQCAK0Yj5xpaixm-2FpgrhaxSZAXSrTfAxFv9mZzWiraVBcGreAZ--DW5sJQ7Lt0MBn7A2OLuje7h-KLT1ONxBHwOC8S1ocarDr8FzJ-srbsmgsfirK3zKfEOWvjPippgw4q1ltx7DLEJMhCC1Ijt3IPgtQj-h8zcWzXTZwYob56Yw6oSDhpVDniX46ja8Nd_KRbcYyffBxrTSIoTtBbVEJMWkOwAM-_itPa9Ah_wkgQHNWS6iHNZY8-GEqnsNLUQNCdW_CAdNVqsAiaClA_O44-WBIOhXfajcKPhiO9lry8C-25efse_Uzf8fTPgZZR-doDKmgo2djXuxcMG_I5mLKGZGxKnmlzJih40Vx714k9S5fRuQL2mBNYLmotvq6QQ9H3fBKExI-HZXVk_4ywEFbcPxmDZW8bxYLJLSr23UwCgdPeTGmO0Qhv6nBOLPTxcTmFznpZzpaGQ67BLYw1urbmxNpn2raES1tCaaprM66Bb55Fo8x4skLOmRMksb05qfZZrFP58gV8H08xMM3qONQSvYr-vG8MywBrZQuZb85QdnSQ1QP5bbnpRuD6Cc8qX8qM66xtBMiJdAAXdfT16VmLJa_YFiCKjnAg0hhhiAnGYoK-rqH8D67yJHPGy3SM9I0ordSOx6N9AoOdlAj0xcCKAL1stnpONO573qwT6mVflEMAVqhvleDTcn8eWIaWseRkTJdVRFo6mtylEfqETeAOvI_wo3xnDKCKIObOYcNEe8PQ7UDpWddhfvOo9UuO_6j20mg49XX7h64O1pF1EgCLaBJvrJ2shz2KiXF6KPsztXsmfuYh54ZobP7KHsRjay8atOsoW8IaqsxEhBRR8OthK7CihtXco2zYGTlik9HJcgrvXGiWjJKlmiCJw9y2XambHGCUfG1T77N-BQav5bSUhQ",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"DateOfBirth\": \"01-01-2000\",\n    \"Gender\": \"Male\",\n    \"Name\": \"Tomás Leite\",\n    \"Email\": \"left4deadgame2@gmail.com\",\n    \"Phone\": \"123-456-7891\",\n    \"Address\": \"123 Main St, Anytown, USA\",\n    \"Conditions\": [\"Diabetes\", \"Hypertension\"],\n    \"EmergencyContact\": \"Jane Doe: 098-765-4321\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:5012/api/Patient/register"
			},
			"response": []
		},
		{
			"name": "Register Staff",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0a931cb2-188f-4aa8-8715-7e6da3ba8fe6",
						"exec": [
							"pm.test(\"Status code is 200 or 201\", function () {",
							"    pm.expect(pm.response.code).to.equal(201);",
							"});",
							"",
							"pm.test(\"Response time is less than 2 seconds\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							"",
							"pm.test(\"All values in the response match the expected values\", function () {",
							"    const jsonData = pm.response.json();",
							"    ",
							"    pm.expect(jsonData.licenseNumber).to.equal(\"SN567842\");",
							"    pm.expect(jsonData.name).to.equal(\"Laura Múrias\");",
							"    pm.expect(jsonData.email).to.equal(\"tomasandreleite@gmail.com\");",
							"    pm.expect(jsonData.phone).to.equal(\"555-12342\");",
							"    pm.expect(jsonData.address).to.equal(\"123 Main St, Sample City, Sample State\");",
							"    ",
							"    const expectedAvailability = [",
							"        \"21-11-2024T09:00:00 - 21-11-2024T11:00:00\",",
							"        \"22-11-2024T13:00:00 - 22-11-2024T21:00:00\"",
							"    ];",
							"    pm.expect(JSON.stringify(jsonData.availabilitySlots)).to.equal(JSON.stringify(expectedAvailability));",
							"    ",
							"    pm.expect(jsonData.specialization).to.equal(\"Cardiology\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "6e68e32e-39dd-4ff1-bdb8-53a00942bfba",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": ".AspNetCore.Cookies=CfDJ8NqQwVH9wspFt2nkQ4EBMjMbSsR7Wi4LujLDEGWzDQCAK0Yj5xpaixm-2FpgrhaxSZAXSrTfAxFv9mZzWiraVBcGreAZ--DW5sJQ7Lt0MBn7A2OLuje7h-KLT1ONxBHwOC8S1ocarDr8FzJ-srbsmgsfirK3zKfEOWvjPippgw4q1ltx7DLEJMhCC1Ijt3IPgtQj-h8zcWzXTZwYob56Yw6oSDhpVDniX46ja8Nd_KRbcYyffBxrTSIoTtBbVEJMWkOwAM-_itPa9Ah_wkgQHNWS6iHNZY8-GEqnsNLUQNCdW_CAdNVqsAiaClA_O44-WBIOhXfajcKPhiO9lry8C-25efse_Uzf8fTPgZZR-doDKmgo2djXuxcMG_I5mLKGZGxKnmlzJih40Vx714k9S5fRuQL2mBNYLmotvq6QQ9H3fBKExI-HZXVk_4ywEFbcPxmDZW8bxYLJLSr23UwCgdPeTGmO0Qhv6nBOLPTxcTmFznpZzpaGQ67BLYw1urbmxNpn2raES1tCaaprM66Bb55Fo8x4skLOmRMksb05qfZZrFP58gV8H08xMM3qONQSvYr-vG8MywBrZQuZb85QdnSQ1QP5bbnpRuD6Cc8qX8qM66xtBMiJdAAXdfT16VmLJa_YFiCKjnAg0hhhiAnGYoK-rqH8D67yJHPGy3SM9I0ordSOx6N9AoOdlAj0xcCKAL1stnpONO573qwT6mVflEMAVqhvleDTcn8eWIaWseRkTJdVRFo6mtylEfqETeAOvI_wo3xnDKCKIObOYcNEe8PQ7UDpWddhfvOo9UuO_6j20mg49XX7h64O1pF1EgCLaBJvrJ2shz2KiXF6KPsztXsmfuYh54ZobP7KHsRjay8atOsoW8IaqsxEhBRR8OthK7CihtXco2zYGTlik9HJcgrvXGiWjJKlmiCJw9y2XambHGCUfG1T77N-BQav5bSUhQ",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"LicenseNumber\": \"SN567842\",\n  \"Name\": \"Laura Múrias\",\n  \"Email\": \"tomasandreleite@gmail.com\",\n  \"Phone\": \"555-12342\",\n  \"Address\": \"123 Main St, Sample City, Sample State\",\n  \"AvailabilitySlots\": [\"21-11-2024T09:00:00 - 21-11-2024T11:00:00\", \"22-11-2024T13:00:00 - 22-11-2024T21:00:00\"],\n  \"Specialization\": \"Cardiology\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:5012/api/Staff/register"
			},
			"response": []
		},
		{
			"name": "Deactivate Staff",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c178a754-3fa8-4894-9d51-6824f486ccac",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 2 seconds\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							"",
							"pm.test(\"All values in the response match the expected values\", function () {",
							"    const jsonData = pm.response.json();",
							"    ",
							"    pm.expect(jsonData.active).to.equal(false);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "56f23f38-15b6-4d56-8b6e-9eba17ad4932",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": ".AspNetCore.Cookies=CfDJ8NqQwVH9wspFt2nkQ4EBMjMbSsR7Wi4LujLDEGWzDQCAK0Yj5xpaixm-2FpgrhaxSZAXSrTfAxFv9mZzWiraVBcGreAZ--DW5sJQ7Lt0MBn7A2OLuje7h-KLT1ONxBHwOC8S1ocarDr8FzJ-srbsmgsfirK3zKfEOWvjPippgw4q1ltx7DLEJMhCC1Ijt3IPgtQj-h8zcWzXTZwYob56Yw6oSDhpVDniX46ja8Nd_KRbcYyffBxrTSIoTtBbVEJMWkOwAM-_itPa9Ah_wkgQHNWS6iHNZY8-GEqnsNLUQNCdW_CAdNVqsAiaClA_O44-WBIOhXfajcKPhiO9lry8C-25efse_Uzf8fTPgZZR-doDKmgo2djXuxcMG_I5mLKGZGxKnmlzJih40Vx714k9S5fRuQL2mBNYLmotvq6QQ9H3fBKExI-HZXVk_4ywEFbcPxmDZW8bxYLJLSr23UwCgdPeTGmO0Qhv6nBOLPTxcTmFznpZzpaGQ67BLYw1urbmxNpn2raES1tCaaprM66Bb55Fo8x4skLOmRMksb05qfZZrFP58gV8H08xMM3qONQSvYr-vG8MywBrZQuZb85QdnSQ1QP5bbnpRuD6Cc8qX8qM66xtBMiJdAAXdfT16VmLJa_YFiCKjnAg0hhhiAnGYoK-rqH8D67yJHPGy3SM9I0ordSOx6N9AoOdlAj0xcCKAL1stnpONO573qwT6mVflEMAVqhvleDTcn8eWIaWseRkTJdVRFo6mtylEfqETeAOvI_wo3xnDKCKIObOYcNEe8PQ7UDpWddhfvOo9UuO_6j20mg49XX7h64O1pF1EgCLaBJvrJ2shz2KiXF6KPsztXsmfuYh54ZobP7KHsRjay8atOsoW8IaqsxEhBRR8OthK7CihtXco2zYGTlik9HJcgrvXGiWjJKlmiCJw9y2XambHGCUfG1T77N-BQav5bSUhQ",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:5012/api/SystemUser/active/tomasandreleite@gmail.com/false"
			},
			"response": []
		},
		{
			"name": "Edit Staff",
			"id": "c3de46ef-4566-41d8-b01e-9fb37d85f2c2",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": ".AspNetCore.Cookies=CfDJ8NqQwVH9wspFt2nkQ4EBMjMbSsR7Wi4LujLDEGWzDQCAK0Yj5xpaixm-2FpgrhaxSZAXSrTfAxFv9mZzWiraVBcGreAZ--DW5sJQ7Lt0MBn7A2OLuje7h-KLT1ONxBHwOC8S1ocarDr8FzJ-srbsmgsfirK3zKfEOWvjPippgw4q1ltx7DLEJMhCC1Ijt3IPgtQj-h8zcWzXTZwYob56Yw6oSDhpVDniX46ja8Nd_KRbcYyffBxrTSIoTtBbVEJMWkOwAM-_itPa9Ah_wkgQHNWS6iHNZY8-GEqnsNLUQNCdW_CAdNVqsAiaClA_O44-WBIOhXfajcKPhiO9lry8C-25efse_Uzf8fTPgZZR-doDKmgo2djXuxcMG_I5mLKGZGxKnmlzJih40Vx714k9S5fRuQL2mBNYLmotvq6QQ9H3fBKExI-HZXVk_4ywEFbcPxmDZW8bxYLJLSr23UwCgdPeTGmO0Qhv6nBOLPTxcTmFznpZzpaGQ67BLYw1urbmxNpn2raES1tCaaprM66Bb55Fo8x4skLOmRMksb05qfZZrFP58gV8H08xMM3qONQSvYr-vG8MywBrZQuZb85QdnSQ1QP5bbnpRuD6Cc8qX8qM66xtBMiJdAAXdfT16VmLJa_YFiCKjnAg0hhhiAnGYoK-rqH8D67yJHPGy3SM9I0ordSOx6N9AoOdlAj0xcCKAL1stnpONO573qwT6mVflEMAVqhvleDTcn8eWIaWseRkTJdVRFo6mtylEfqETeAOvI_wo3xnDKCKIObOYcNEe8PQ7UDpWddhfvOo9UuO_6j20mg49XX7h64O1pF1EgCLaBJvrJ2shz2KiXF6KPsztXsmfuYh54ZobP7KHsRjay8atOsoW8IaqsxEhBRR8OthK7CihtXco2zYGTlik9HJcgrvXGiWjJKlmiCJw9y2XambHGCUfG1T77N-BQav5bSUhQ",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"Phone\": \"+351936217113\",\n    \"Specialization\": \"Neurology\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:5012/api/Staff/update/tomasandreleite@gmail.com"
			},
			"response": []
		},
		{
			"name": "List/Search Staff Not Found",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a5f6cb4e-81c2-457a-9ac7-9dde13c25337",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.expect(pm.response.code).to.equal(404);",
							"});",
							"",
							"pm.test(\"Response time is less than 2 seconds\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							"",
							"pm.test(\"Response body is 'No staff members found with the given criteria.'\", function () {",
							"    const responseBody = pm.response.text(); ",
							"    pm.expect(responseBody).to.equal(\"No staff members found with the given criteria.\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "8bd190f5-2b5f-4f92-b642-0c605dbc0ef6",
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "bbc2b876-e5e8-4340-a036-584881a1eb75",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": ".AspNetCore.Cookies=CfDJ8NqQwVH9wspFt2nkQ4EBMjMbSsR7Wi4LujLDEGWzDQCAK0Yj5xpaixm-2FpgrhaxSZAXSrTfAxFv9mZzWiraVBcGreAZ--DW5sJQ7Lt0MBn7A2OLuje7h-KLT1ONxBHwOC8S1ocarDr8FzJ-srbsmgsfirK3zKfEOWvjPippgw4q1ltx7DLEJMhCC1Ijt3IPgtQj-h8zcWzXTZwYob56Yw6oSDhpVDniX46ja8Nd_KRbcYyffBxrTSIoTtBbVEJMWkOwAM-_itPa9Ah_wkgQHNWS6iHNZY8-GEqnsNLUQNCdW_CAdNVqsAiaClA_O44-WBIOhXfajcKPhiO9lry8C-25efse_Uzf8fTPgZZR-doDKmgo2djXuxcMG_I5mLKGZGxKnmlzJih40Vx714k9S5fRuQL2mBNYLmotvq6QQ9H3fBKExI-HZXVk_4ywEFbcPxmDZW8bxYLJLSr23UwCgdPeTGmO0Qhv6nBOLPTxcTmFznpZzpaGQ67BLYw1urbmxNpn2raES1tCaaprM66Bb55Fo8x4skLOmRMksb05qfZZrFP58gV8H08xMM3qONQSvYr-vG8MywBrZQuZb85QdnSQ1QP5bbnpRuD6Cc8qX8qM66xtBMiJdAAXdfT16VmLJa_YFiCKjnAg0hhhiAnGYoK-rqH8D67yJHPGy3SM9I0ordSOx6N9AoOdlAj0xcCKAL1stnpONO573qwT6mVflEMAVqhvleDTcn8eWIaWseRkTJdVRFo6mtylEfqETeAOvI_wo3xnDKCKIObOYcNEe8PQ7UDpWddhfvOo9UuO_6j20mg49XX7h64O1pF1EgCLaBJvrJ2shz2KiXF6KPsztXsmfuYh54ZobP7KHsRjay8atOsoW8IaqsxEhBRR8OthK7CihtXco2zYGTlik9HJcgrvXGiWjJKlmiCJw9y2XambHGCUfG1T77N-BQav5bSUhQ",
						"type": "default"
					}
				],
				"url": {
					"raw": "http://localhost:5012/api/Staff/search?name=Tomás&email=tomasandreleite11@gmail.com",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5012",
					"path": [
						"api",
						"Staff",
						"search"
					],
					"query": [
						{
							"key": "name",
							"value": "Tomás"
						},
						{
							"key": "email",
							"value": "tomasandreleite11@gmail.com"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List/Search Staff",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4d6d9074-3818-479e-b8b7-a13e41025dd1",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 2 seconds\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							"",
							"pm.test(\"All values in the first response item match the expected values\", function () {",
							"    const jsonData = pm.response.json();",
							"    const firstItem = jsonData[0];",
							"    pm.expect(firstItem.id).to.equal(\"T202400001\");",
							"    pm.expect(firstItem.licenseNumber).to.equal(\"SN567842\");",
							"    pm.expect(firstItem.name).to.equal(\"Laura Múrias\");",
							"    pm.expect(firstItem.email).to.equal(\"tomasandreleite@gmail.com\");",
							"    pm.expect(firstItem.phone).to.equal(\"555-12342\");",
							"    pm.expect(firstItem.address).to.equal(\"123 Main St, Sample City, Sample State\");",
							"    ",
							"    const expectedAvailabilitySlots = [",
							"        \"21-11-2024T09:00:00 - 21-11-2024T11:00:00\",",
							"        \"22-11-2024T13:00:00 - 22-11-2024T21:00:00\"",
							"    ];",
							"    pm.expect(JSON.stringify(firstItem.availabilitySlots)).to.equal(JSON.stringify(expectedAvailabilitySlots));",
							"    ",
							"    pm.expect(firstItem.specialization).to.equal(\"Cardiology\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "28dc63f0-ce0c-437b-8062-b57bf02b388c",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5012/api/Staff/search?name=Laura%20Múrias&email=tomasandreleite@gmail.com",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5012",
					"path": [
						"api",
						"Staff",
						"search"
					],
					"query": [
						{
							"key": "name",
							"value": "Laura%20Múrias"
						},
						{
							"key": "email",
							"value": "tomasandreleite@gmail.com"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Operation Request Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "59253093-5cf8-47b3-8f03-521f0ec4d269",
						"exec": [
							"pm.test(\"Status code is 200 or 201\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains OperationRequestId\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"OperationRequestId\");\r",
							"});\r",
							"\r",
							"pm.test(\"StaffId matches the request\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.StaffId).to.eql(\"L202400001\");\r",
							"});\r",
							"\r",
							"pm.test(\"PatientId matches the request\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.PatientId).to.eql(\"202410000001\");\r",
							"});\r",
							"\r",
							"pm.test(\"OperationTypeId matches the request\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.OperationTypeId).to.eql(\"Cardiology\");\r",
							"});\r",
							"\r",
							"pm.test(\"Priority is High\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.Priority).to.eql(\"High\");\r",
							"});\r",
							"\r",
							"pm.test(\"Deadline matches the request\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.Deadline).to.eql(\"25-12-2024\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response has the correct structure\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"StaffId\");\r",
							"    pm.expect(jsonData).to.have.property(\"PatientId\");\r",
							"    pm.expect(jsonData).to.have.property(\"OperationTypeId\");\r",
							"    pm.expect(jsonData).to.have.property(\"Priority\");\r",
							"    pm.expect(jsonData).to.have.property(\"Deadline\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "9d34f564-929e-443e-baa0-d50ebe4b75f7",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"StaffId\": \"L202400001\",\r\n    \"PatientId\": \"202410000001\",\r\n    \"OperationTypeId\": \"Cardiology\",\r\n    \"Priority\": \"High\",\r\n    \"Deadline\": \"25-12-2024\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:5012/api/OperationRequest/create"
			},
			"response": []
		},
		{
			"name": "Operation Request Create 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "510c518b-9f8c-47b2-9ed7-72d7b209eeed",
						"exec": [
							"pm.test(\"Status code is 200 or 201\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains OperationRequestId\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"OperationRequestId\");\r",
							"});\r",
							"\r",
							"pm.test(\"StaffId matches the request\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.StaffId).to.eql(\"R202400001\");\r",
							"});\r",
							"\r",
							"pm.test(\"PatientId matches the request\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.PatientId).to.eql(\"202410000001\");\r",
							"});\r",
							"\r",
							"pm.test(\"OperationTypeId matches the request\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.OperationTypeId).to.eql(\"Neurology\");\r",
							"});\r",
							"\r",
							"pm.test(\"Priority is High\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.Priority).to.eql(\"High\");\r",
							"});\r",
							"\r",
							"pm.test(\"Deadline matches the request\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.Deadline).to.eql(\"30-12-2025\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response has the correct structure\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"StaffId\");\r",
							"    pm.expect(jsonData).to.have.property(\"PatientId\");\r",
							"    pm.expect(jsonData).to.have.property(\"OperationTypeId\");\r",
							"    pm.expect(jsonData).to.have.property(\"Priority\");\r",
							"    pm.expect(jsonData).to.have.property(\"Deadline\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "14cc6ebc-8994-4bca-b78c-7a718d98cb3a",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"StaffId\": \"R202400001\",\r\n    \"PatientId\": \"202410000001\",\r\n    \"OperationTypeId\": \"Neurology\",\r\n    \"Priority\": \"High\",\r\n    \"Deadline\": \"30-12-2025\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:5012/api/OperationRequest/create"
			},
			"response": []
		},
		{
			"name": "Operation Request Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "63a90fa6-1b78-4173-b955-915e6c75d7c8",
						"exec": [
							"pm.test(\"Status code is 200 or 201\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains OperationRequestId and matches request\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"OperationRequestId\", \"8905a217-047c-4f1d-9304-5bae918b805b\");\r",
							"});\r",
							"\r",
							"pm.test(\"StaffId matches the request\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.StaffId).to.eql(\"R202400001\");\r",
							"});\r",
							"\r",
							"pm.test(\"Priority is updated to Low\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.Priority).to.eql(\"Low\");\r",
							"});\r",
							"\r",
							"pm.test(\"Deadline is updated to the new date\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.Deadline).to.eql(\"28-12-2027\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response has the correct structure\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"OperationRequestId\");\r",
							"    pm.expect(jsonData).to.have.property(\"StaffId\");\r",
							"    pm.expect(jsonData).to.have.property(\"Priority\");\r",
							"    pm.expect(jsonData).to.have.property(\"Deadline\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "32d1980d-f795-4bd6-9b03-6fcf1b5b5485",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"OperationRequestId\": \"8905a217-047c-4f1d-9304-5bae918b805b\",\r\n  \"StaffId\": \"R202400001\",\r\n  \"NewPriority\": \"Low\",\r\n  \"NewDeadline\": \"28-12-2027\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:5012/api/OperationRequest/update"
			},
			"response": []
		},
		{
			"name": "Operation Request Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "be9e89ae-44a7-4eb3-94e1-d1fd220c89cf",
						"exec": [
							"pm.test(\"Status code is 200 or 204\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains success message\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"message\");\r",
							"    pm.expect(jsonData.message).to.include(\"Operation request deleted successfully\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains operationRequestId\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.operationRequestId).to.eql(\"656b80da-3929-4149-92a0-527bf3343bba\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains staffId\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.staffId).to.eql(\"L202400001\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response has the correct structure\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"operationRequestId\");\r",
							"    pm.expect(jsonData).to.have.property(\"staffId\");\r",
							"    pm.expect(jsonData).to.have.property(\"message\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "a2a2de4d-82c5-43c3-8836-700be5418df7",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"operationRequestId\": \"656b80da-3929-4149-92a0-527bf3343bba\",\r\n    \"staffId\": \"L202400001\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:5012/api/OperationRequest/delete"
			},
			"response": []
		},
		{
			"name": "Operation Request List",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4d1c906e-cd61-42b0-8331-5443e073f721",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is an array\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an(\"array\");\r",
							"});\r",
							"\r",
							"pm.test(\"Each operation request item has the correct properties\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    jsonData.forEach(item => {\r",
							"        pm.expect(item).to.have.property(\"operationRequestId\");\r",
							"        pm.expect(item).to.have.property(\"staffId\");\r",
							"        pm.expect(item).to.have.property(\"patientId\");\r",
							"        pm.expect(item).to.have.property(\"operationTypeId\");\r",
							"        pm.expect(item).to.have.property(\"priority\");\r",
							"        pm.expect(item).to.have.property(\"deadline\");\r",
							"        pm.expect(item).to.have.property(\"status\");\r",
							"    });\r",
							"});\r",
							"\r",
							"pm.test(\"Each item has a valid priority value\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    const validPriorities = [\"High\", \"Medium\", \"Low\"];\r",
							"    jsonData.forEach(item => {\r",
							"        pm.expect(validPriorities).to.include(item.priority);\r",
							"    });\r",
							"});\r",
							"\r",
							"pm.test(\"Each item has a valid status value\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    const validStatuses = [\"Pending\", \"Completed\", \"Cancelled\"];\r",
							"    jsonData.forEach(item => {\r",
							"        pm.expect(validStatuses).to.include(item.status);\r",
							"    });\r",
							"});\r",
							"\r",
							"pm.test(\"Response item count is within page size\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    const pageSize = pm.request.url.query.get(\"pageSize\") || 10;\r",
							"    pm.expect(jsonData.length).to.be.at.most(Number(pageSize));\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "2ad94064-6d04-4c01-87f4-4667adc57d93",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:5012/api/OperationRequest/list"
			},
			"response": []
		},
		{
			"name": "Edit Patient as an Admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "999862da-d111-445b-8c5b-ad55655582fc",
						"exec": [
							"pm.test(\"Status code is 200 or 204\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains updated patient information\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"Name\", \"Ricardo Guimaraes\");\r",
							"    pm.expect(jsonData).to.have.property(\"Email\", \"ricardo.guimaraes400@gmail.com\");\r",
							"    pm.expect(jsonData).to.have.property(\"Phone\", \"+5511998765462\");\r",
							"    pm.expect(jsonData).to.have.property(\"Address\", \"Rua do Casal, Porto, Portugal\");\r",
							"    pm.expect(jsonData).to.have.property(\"Conditions\").that.includes.members([\"Rinite Alergica\", \"Asma\"]);\r",
							"    pm.expect(jsonData).to.have.property(\"EmergencyContact\", \"Jota Silva - +5511998765435\");\r",
							"});\r",
							"\r",
							"pm.test(\"Email format is valid\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.Email).to.match(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/);\r",
							"});\r",
							"\r",
							"pm.test(\"Phone format is valid\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.Phone).to.match(/^\\+?\\d{1,4}\\d{10}$/);\r",
							"});\r",
							"\r",
							"pm.test(\"Conditions is an array\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.Conditions).to.be.an(\"array\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "d0a8a113-a55a-4216-a1d8-b8a28eff3aa1",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": ".AspNetCore.Cookies=CfDJ8Lp1eZmYPg9Oh65Wzjxz_3ngtU0MRyGJVnBIVqLScIem3w01iVjdz1-rr0CfU3CWeFfQszM1DWUsuZFtSi3iJcXt8anCMMEY7YZac1gHTURLIwgQLH256jOroBGCi7z-MabNDePU57p3KVuc2hGK2tvh5vfkmH14gg9OESCBuE2JIBntfZp9vpSVa8Eqkgc6lfPfvzeWh2VI3jLlKP4WkFSscGO67ndjkayfg799aZjgPWdx1EInj0ULK3i2FrXhfHV4ceNVXTOzOdF9VMqKn347I0mqALVTEfRg7JPYCSiMBqPEZ4uIBKqNe2dEYMuQHsU4aSvSqMpfBGRmqNXuor5Xq6pn6A2tyDqyrq9QsSwuQuzw5O36gsIjigbSgXeemygDGSWH1pbItC9Z1vx9vGnHC2gdnk7xacHL5yXaaWAARN3RJPClV6nfAFcdQRYsMNhj3xSpkk844oITrME43EDTcZWhGAH55rtgZUD8RGu8GQwM2hTfo-1mTIVLmk_ydR_YfZn_55bxA09cyZjBebZJbN1KHwCHUSqq94lI2s6OQUMZgnraOr7I0aqF1Bvwre6r37LnFrtZRBKsNJT8aFg7NJNhFd5AjHC6lG5TLmrZ8oVkScZx6nJFDjFcIXnnS608vepJA87TQcb2YQ9n3q0eldDVlv2r-oxYxgFQLNl7Me10TIU-174vqOqrpXqIOT_HkQ5WPgKl5T6FjldXOI5OMKTYwWhIQKkqhXhhnpItpTDXAATJDBaSeuAwlphCMeoWLhJt5aJYgoH4qbcH80PTwsGrguYyCM_v5DWU1LD-oxiXXCXOg5op8HpquuL3yUuucKHozibTMdhx_31-a-SXrxcBd9f1XvkPJd98cC8Qicv6LHRk9veQ8L74X8iunMT5x--v_LVND1wZv8hJVcSx_FmQtwzQpP0tr-55PZLCpd3fQv1ztwE_aPzQDLu3ZkzW1dDKgTN270afpv0YT8c",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Name\": \"Ricardo Guimaraes\",\r\n    \"Email\": \"ricardo.guimaraes400@gmail.com\",\r\n    \"Phone\": \"+5511998765462\",\r\n    \"Address\": \"Rua do Casal, Porto, Portugal\",\r\n    \"Conditions\": [\"Rinite Alergica\", \"Asma\"],\r\n    \"EmergencyContact\": \"Jota Silva - +5511998765435\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:5012/api/Patient/202410000002"
			},
			"response": []
		},
		{
			"name": "Create Patient Profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "411aca45-a6ed-4c47-814f-ed9ce8b2cee5",
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 2 seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"\r",
							"pm.test(\"All values in the response match the expected values\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    \r",
							"    pm.expect(jsonData.medicalRecordNumber).to.equal(\"202410000001\");\r",
							"    pm.expect(jsonData.dateOfBirth).to.equal(\"05-10-2012\");\r",
							"    pm.expect(jsonData.gender).to.equal(\"Male\");\r",
							"    pm.expect(jsonData.name).to.equal(\"Test Patient\");\r",
							"    pm.expect(jsonData.email).to.equal(\"sblsimaolopes@gmail.com\");\r",
							"    pm.expect(jsonData.phone).to.equal(\"937-453-5638\");\r",
							"    pm.expect(jsonData.address).to.equal(\"Rua de Cima, Anytown, USA\");\r",
							"    \r",
							"    // Stringify arrays for accurate comparison of Conditions\r",
							"    const expectedConditions = [\"Diabetes\", \"Hypertension\"];\r",
							"    pm.expect(JSON.stringify(jsonData.conditions)).to.equal(JSON.stringify(expectedConditions));\r",
							"    \r",
							"    pm.expect(jsonData.emergencyContact).to.equal(\"Jane Doe: 098-765-4321\");\r",
							"    \r",
							"    // Check for additional fields\r",
							"    pm.expect(jsonData.deletePatientDate).to.be.null;\r",
							"    pm.expect(jsonData.userID).to.be.null;\r",
							"    pm.expect(jsonData.marketingConsent).to.be.null;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "e87d8887-8048-4b15-ae8d-645592e0df0f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": ".AspNetCore.Cookies=CfDJ8PO27rPERe5CqRKRiXWCiEQ8jGuA196K7IIg_hCxWcYSsqDwQbDT9-SpXSmV5huMt4AB4qSsjaO-2Zo_Sj8EzdyUivVT-KlduoLEhErnO4aR6DJk6ysLy7dpPI063emWPvWO2F6McUmi8tr3kCV6XfrncAMTcZOnQ3FNHbhb4UGrSC1HJSlxVt_VLi3dHKh1ctxZ_QHn8SCUHa_W4Ak-qAQ9QcqfM2fmEnkcj7KDk1e75sA-v4NMJkIof8EI-hh_fpB68J4lkiRVz0z3C23tnOFh95Ht5-KlJdv5ABCYJRirTQ8dhktGJdcFlqknofwQS6Ncq-I1NW4kjiAHXIvX1Sc3i5_VEvR_Sw4GcamTWc_LDv0-Ohi0-5hwzwDeiUr0PSQlb1SBfywpdxxFE00SBrGKQn62Fv_svHrFu1Qv5MQQK9XivSmYGbpND0TohtMc_cTyBFFYhZCuyovXrNugGpgV9ugTwBy_K-shb3stQ9FeUDSzhfPVpMvJS0VCozKBZ1ipwJc2YHAquH6DeDN8p4xIKIIsaVUgXZhdSZDmERDnGB0z2F-H2HQQPsZvCd3X0M15Jj8ldYt34aAsQB_vvt8L-NObTnRkNjmy25TZvNwcJmQBqNfzGe7ZdW5SEw-_FWYDfhAL5HOaU2GHLWTr_dZbH-WAbhOlIvfYLgb2nyTXPIdu0do0oBPl5ergX2k_DM_7vkpTdcvEkjfPTqV1f0UBeldFGkt035RoTfRm3QTdErOl5XoYeFxujAaPKLqWgf3jdMIBLXQnFXKGaHr4lh-hQP69PnPj84S1kN1blOMDXGRyqSqtyV33thZ3DElcjFHzLb4O0cywC6eYWz9XmmBstm2FSxVvUyDMZ7ufGCbWk_uzI7VuZ5auS21lIOjMx3CLb2Co_YArIDb_hbmswJnaCLHrq_Y7H4MSlshN3Es3",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"DateOfBirth\": \"05-10-2012\",\r\n    \"Gender\": \"Male\",\r\n    \"Name\": \"Test Patient\",\r\n    \"Email\": \"sblsimaolopes@gmail.com\",\r\n    \"Phone\": \"937-453-5638\",\r\n    \"Address\": \"Rua de Cima, Anytown, USA\",\r\n    \"Conditions\": [\"Diabetes\", \"Hypertension\"],\r\n    \"EmergencyContact\": \"Jane Doe: 098-765-4321\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:5012/api/patient/register"
			},
			"response": []
		},
		{
			"name": "List Patient Profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "828d2b9f-0bfc-46b7-b7d4-b1607ce1b3de",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 2 seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"\r",
							"pm.test(\"All values in the response match the expected values\", function () {\r",
							"    const jsonData = pm.response.json()[0]; // Acessa o primeiro objeto do array\r",
							"    \r",
							"    pm.expect(jsonData.medicalRecordNumber).to.equal(\"202410000001\");\r",
							"    pm.expect(jsonData.dateOfBirth).to.equal(\"05-10-2012\");\r",
							"    pm.expect(jsonData.gender).to.equal(\"Male\");\r",
							"    pm.expect(jsonData.name).to.equal(\"Test Patient\");\r",
							"    pm.expect(jsonData.email).to.equal(\"sblsimaolopes@gmail.com\");\r",
							"    pm.expect(jsonData.phone).to.equal(\"937-453-5638\");\r",
							"    pm.expect(jsonData.address).to.equal(\"Rua de Cima, Anytown, USA\");\r",
							"    \r",
							"    // Stringify arrays for accurate comparison of Conditions\r",
							"    const expectedConditions = [\"Diabetes\", \"Hypertension\"];\r",
							"    pm.expect(JSON.stringify(jsonData.conditions)).to.equal(JSON.stringify(expectedConditions));\r",
							"    \r",
							"    pm.expect(jsonData.emergencyContact).to.equal(\"Jane Doe: 098-765-4321\");\r",
							"    \r",
							"    // Check for additional fields\r",
							"    pm.expect(jsonData.deletePatientDate).to.be.null;\r",
							"    pm.expect(jsonData.userID).to.be.null;\r",
							"    pm.expect(jsonData.marketingConsent).to.be.null;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "49f7325a-c2b2-4b8e-8d26-d7b793af438b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": ".AspNetCore.Cookies=CfDJ8PO27rPERe5CqRKRiXWCiEQ8jGuA196K7IIg_hCxWcYSsqDwQbDT9-SpXSmV5huMt4AB4qSsjaO-2Zo_Sj8EzdyUivVT-KlduoLEhErnO4aR6DJk6ysLy7dpPI063emWPvWO2F6McUmi8tr3kCV6XfrncAMTcZOnQ3FNHbhb4UGrSC1HJSlxVt_VLi3dHKh1ctxZ_QHn8SCUHa_W4Ak-qAQ9QcqfM2fmEnkcj7KDk1e75sA-v4NMJkIof8EI-hh_fpB68J4lkiRVz0z3C23tnOFh95Ht5-KlJdv5ABCYJRirTQ8dhktGJdcFlqknofwQS6Ncq-I1NW4kjiAHXIvX1Sc3i5_VEvR_Sw4GcamTWc_LDv0-Ohi0-5hwzwDeiUr0PSQlb1SBfywpdxxFE00SBrGKQn62Fv_svHrFu1Qv5MQQK9XivSmYGbpND0TohtMc_cTyBFFYhZCuyovXrNugGpgV9ugTwBy_K-shb3stQ9FeUDSzhfPVpMvJS0VCozKBZ1ipwJc2YHAquH6DeDN8p4xIKIIsaVUgXZhdSZDmERDnGB0z2F-H2HQQPsZvCd3X0M15Jj8ldYt34aAsQB_vvt8L-NObTnRkNjmy25TZvNwcJmQBqNfzGe7ZdW5SEw-_FWYDfhAL5HOaU2GHLWTr_dZbH-WAbhOlIvfYLgb2nyTXPIdu0do0oBPl5ergX2k_DM_7vkpTdcvEkjfPTqV1f0UBeldFGkt035RoTfRm3QTdErOl5XoYeFxujAaPKLqWgf3jdMIBLXQnFXKGaHr4lh-hQP69PnPj84S1kN1blOMDXGRyqSqtyV33thZ3DElcjFHzLb4O0cywC6eYWz9XmmBstm2FSxVvUyDMZ7ufGCbWk_uzI7VuZ5auS21lIOjMx3CLb2Co_YArIDb_hbmswJnaCLHrq_Y7H4MSlshN3Es3",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:5012/api/patient/search?name=Test Patient&email=sblsimaolopes@gmail.com",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5012",
					"path": [
						"api",
						"patient",
						"search"
					],
					"query": [
						{
							"key": "name",
							"value": "Test Patient"
						},
						{
							"key": "email",
							"value": "sblsimaolopes@gmail.com"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User Profile",
			"id": "9320b56e-98a8-4afd-a00b-5214ee3b0767",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": ".AspNetCore.Cookies=CfDJ8PO27rPERe5CqRKRiXWCiET6Md_rIFBKsYFZuz1uz_d-FuMXBUqa3djDjWk33kxzPZU_vSen2FegAxjUnuo7hRymkguRzmLi-IeufCN994uLbUozL3gzUTNhESp3jcNdhJRKIPFJoJfUn5WuLZtjH8gpoty6G-PuoRw4eJvp77oJIuC4DID3F86fxGp2ISYnTgF7sq5SffJxK7EYYYItP_goHcUGaahE_EsNYq0ZS6W-NdgBapj-S2nTcVNZ3qVYxFs1jl63ycMU6dxFgqUZf4k-alOXiwouAFaiA_9nrA8C3s5MLB0r33VE-Zd5xQnlwgjaJQtupidE6MMHn8v2HRG3Akod8_Bx3byJAsSb66KVZjWDi6Rnx8bdg03QIXnSABrWo1ltD232e6Ng5q2Oeh3C41Omnm_CbS8sgllD7lvggkFlng2hCIdUewm3ap7fQS6HxPbCV4BoraQiLE7CgtEmKhOcscl9jTwNIiveX11k91s2K9MdeHGz131fLEeOQcIXb92sl3dxBs3qEpeMBnyLYVaOMjey55SjrkwL6AyvYe2ba6iz4svnQBBZs3VtKN6eOJarGrSzpCm-poFnH4YpLa_jYYdYxdmiyCCXN1HXi1mxll_aDJ-pQHlLpaoji8Ak5sPBpMi_f4EsHOG3RkLZGqO2HVJq7QoUoJLEFTcW8Gt42B1UshgmGBQ7DmhmKb3IP0QLkTa2owNv1S1nEPzx0tutVooqvDXCcaYOFZq0cE5i7Spc9PaR7FxA-4lf4ARMhpM4T2kCuFK6ioSHo4h7QA2W23rFHZZjA0-nWXCjJBwoEIlv0N4qijs3CdXs0EA0dZG_YqrlmDl0UV7pF6U",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Phone\": \"923-435-3456\",\r\n    \"MarketingConsent\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:5012/api/patient/update"
			},
			"response": []
		}
	]
}